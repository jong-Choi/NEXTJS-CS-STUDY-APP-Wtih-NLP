[{"id":0,"originalText":"CSR에선 브라우저가 서버에 HTML과 JS 파일을 요청한 후 로드되면 사용자의 상호작용에 따라 JS를 이용해서 동적으로 렌더링을 시킨다.\n\n👍 장점\n첫 로딩만 기다리면, 동적으로 빠르게 렌더링이 되기 때문에 사용자 경험(UX)이 좋다.\n서버에게 요청하는 횟수가 훨씬 적기 때문에 서버의 부담이 덜하다.\n👎 단점\n모든 스크립트 파일이 로드될 때까지 기다려야 한다.\n리소스를 청크(Chunk) 단위로 묶어서 요청할 때만 다운받게 하는 방식으로 완화시킬 수 있지만 완벽히 해결할 수는 없다.\n검색엔진의 검색 봇이 크롤링을 하는데 어려움을 겪기 때문에 검색엔진 최적화(Search Engine Optimization)의 문제가 있다.\n구글 봇의 경우는 JS를 지원하지만, 다른 검색엔진의 경우 그렇지 않기 때문에 문제가 된다.","keywordArray":["CSR","브라우저","서버","JS 파일","사용자","상호 작용","JS","동적","렌더링","동적","렌더링","UX","서버","횟수","서버","부담","스크립트 파일","리소스","단위","방식","검색 엔진","검색 봇","크롤 링","어려움","Search Engine Optimization","문제","구글 봇","JS","검색 엔진","문제"]},{"id":1,"originalText":"CSR에선 브라우저가 서버에 HTML과 JS 파일을 요청한 후 로드되면 사용자의 상호작용에 따라 JS를 이용해서 동적으로 렌더링을 시킨다.\n\n👍 장점\n첫 로딩만 기다리면, 동적으로 빠르게 렌더링이 되기 때문에 사용자 경험(UX)이 좋다.\n서버에게 요청하는 횟수가 훨씬 적기 때문에 서버의 부담이 덜하다.\n👎 단점\n모든 스크립트 파일이 로드될 때까지 기다려야 한다.\n리소스를 청크(Chunk) 단위로 묶어서 요청할 때만 다운받게 하는 방식으로 완화시킬 수 있지만 완벽히 해결할 수는 없다.\n검색엔진의 검색 봇이 크롤링을 하는데 어려움을 겪기 때문에 검색엔진 최적화(Search Engine Optimization)의 문제가 있다.\n구글 봇의 경우는 JS를 지원하지만, 다른 검색엔진의 경우 그렇지 않기 때문에 문제가 된다.","keywordArray":["CSR","브라우저","서버","JS 파일","사용자","상호 작용","JS","동적","렌더링","동적","렌더링","UX","서버","횟수","서버","부담","스크립트 파일","리소스","단위","방식","검색 엔진","검색 봇","크롤 링","어려움","Search Engine Optimization","문제","구글 봇","JS","검색 엔진","문제"]},{"id":2,"title":"CSR의 특징","originalText":"CSR에선 브라우저가 서버에 HTML과 JS 파일을 요청한 후 로드되면 사용자의 상호작용에 따라 JS를 이용해서 동적으로 렌더링을 시킨다.\n\n👍 장점\n첫 로딩만 기다리면, 동적으로 빠르게 렌더링이 되기 때문에 사용자 경험(UX)이 좋다.\n서버에게 요청하는 횟수가 훨씬 적기 때문에 서버의 부담이 덜하다.\n👎 단점\n모든 스크립트 파일이 로드될 때까지 기다려야 한다.\n리소스를 청크(Chunk) 단위로 묶어서 요청할 때만 다운받게 하는 방식으로 완화시킬 수 있지만 완벽히 해결할 수는 없다.\n검색엔진의 검색 봇이 크롤링을 하는데 어려움을 겪기 때문에 검색엔진 최적화(Search Engine Optimization)의 문제가 있다.\n구글 봇의 경우는 JS를 지원하지만, 다른 검색엔진의 경우 그렇지 않기 때문에 문제가 된다.","keywordArray":["CSR","브라우저","서버","JS 파일","사용자","상호 작용","JS","동적","렌더링","동적","렌더링","UX","서버","횟수","서버","부담","스크립트 파일","리소스","단위","방식","검색 엔진","검색 봇","크롤 링","어려움","Search Engine Optimization","문제","구글 봇","JS","검색 엔진","문제"]},{"id":3,"title":"ssr의 특징","originalText":"CSR에선 브라우저가 서버에 HTML과 JS 파일을 요청한 후 로드되면 사용자의 상호작용에 따라 JS를 이용해서 동적으로 렌더링을 시킨다.\n\n👍 장점\n첫 로딩만 기다리면, 동적으로 빠르게 렌더링이 되기 때문에 사용자 경험(UX)이 좋다.\n서버에게 요청하는 횟수가 훨씬 적기 때문에 서버의 부담이 덜하다.\n👎 단점\n모든 스크립트 파일이 로드될 때까지 기다려야 한다.\n리소스를 청크(Chunk) 단위로 묶어서 요청할 때만 다운받게 하는 방식으로 완화시킬 수 있지만 완벽히 해결할 수는 없다.\n검색엔진의 검색 봇이 크롤링을 하는데 어려움을 겪기 때문에 검색엔진 최적화(Search Engine Optimization)의 문제가 있다.\n구글 봇의 경우는 JS를 지원하지만, 다른 검색엔진의 경우 그렇지 않기 때문에 문제가 된다.","keywordArray":["CSR","브라우저","서버","JS 파일","사용자","상호 작용","JS","동적","렌더링","동적","렌더링","UX","서버","횟수","서버","부담","스크립트 파일","리소스","단위","방식","검색 엔진","검색 봇","크롤 링","어려움","Search Engine Optimization","문제","구글 봇","JS","검색 엔진","문제"]},{"id":4,"category":"HTML","title":"표준모드와 호환모드","originalText":"과거의 웹 페이지는 넷스케이프와 익스플로러 버전이 따로 존재했고 웹 표준이 없었다. 그러나 W3C가 웹 표준을 만들면서 브라우저가 웹사이트를 제대로 표현할 수 없게 되자 렌더링을 할 때 표준 모드(Standards mode)와 호환 모드(Quirks mode)로 렌더링을 할 수 있게 옵션을 제공하였다.\n\n브라우저는 HTML 문서가 DOCTYPE을 가지고 있지 않으면 호환 모드로 렌더링을 하고, 가지고 있다면 주어진 DOCTYPE에 맞게 표준 모드로 렌더링을 한다. 호환 모드로 렌더링을 하게 되면 오래된 웹페이지들을 최신 버전의 브라우저에서도 깨지지 않게 하기 때문에 각 브라우저마다 다르게 보일 수 있다. 예를 들어, IE의 경우 호환 모드에서 박스 모델(Box model)을 잘못 해석하지만, 나머지 브라우저들은 그렇지 않다.\n\n결론적으로, 정말 특별한 경우가 아니라면 DOCTYPE을 명시하여 브라우저가 표준 모드로 렌더링 하게 하자. 현재 시점에서 HTML5에서 권장하는 방식인 <!DOCTYPE html> 을 사용하는 것이 가장 바람직하다.","keywordArray":["과거","익스플로러 버전","웹 표준","C","웹 표준","브라우저","웹 사이트","렌더링","Quirks mode","렌더링","옵션","HTML 문서","DOCTYPE","호환 모드","렌더링","DOCTYPE","표준 모드","렌더링","호환 모드","렌더링","웹 페이지들","최신 버전","브라우저","예","IE","경우 호환 모드","Box model","결론","경우","DOCTYPE","브라우저","표준 모드","시점","HTML","DOCTYPE html"]},{"id":5,"category":"HTML","title":"표준모드와 호환모드","originalText":"과거의 웹 페이지는 넷스케이프와 익스플로러 버전이 따로 존재했고 웹 표준이 없었다. 그러나 W3C가 웹 표준을 만들면서 브라우저가 웹사이트를 제대로 표현할 수 없게 되자 렌더링을 할 때 표준 모드(Standards mode)와 호환 모드(Quirks mode)로 렌더링을 할 수 있게 옵션을 제공하였다.\n\n브라우저는 HTML 문서가 DOCTYPE을 가지고 있지 않으면 호환 모드로 렌더링을 하고, 가지고 있다면 주어진 DOCTYPE에 맞게 표준 모드로 렌더링을 한다. 호환 모드로 렌더링을 하게 되면 오래된 웹페이지들을 최신 버전의 브라우저에서도 깨지지 않게 하기 때문에 각 브라우저마다 다르게 보일 수 있다. 예를 들어, IE의 경우 호환 모드에서 박스 모델(Box model)을 잘못 해석하지만, 나머지 브라우저들은 그렇지 않다.\n\n결론적으로, 정말 특별한 경우가 아니라면 DOCTYPE을 명시하여 브라우저가 표준 모드로 렌더링 하게 하자. 현재 시점에서 HTML5에서 권장하는 방식인 <!DOCTYPE html> 을 사용하는 것이 가장 바람직하다.","keywordArray":["과거","익스플로러 버전","웹 표준","C","웹 표준","브라우저","웹 사이트","렌더링","Quirks mode","렌더링","옵션","HTML 문서","DOCTYPE","호환 모드","렌더링","DOCTYPE","표준 모드","렌더링","호환 모드","렌더링","웹 페이지들","최신 버전","브라우저","예","IE","경우 호환 모드","Box model","결론","경우","DOCTYPE","브라우저","표준 모드","시점","HTML","DOCTYPE html"]},{"id":6,"category":"HTML","title":"표준모드와 호환모드","originalText":"과거의 웹 페이지는 넷스케이프와 익스플로러 버전이 따로 존재했고 웹 표준이 없었다. 그러나 W3C가 웹 표준을 만들면서 브라우저가 웹사이트를 제대로 표현할 수 없게 되자 렌더링을 할 때 표준 모드(Standards mode)와 호환 모드(Quirks mode)로 렌더링을 할 수 있게 옵션을 제공하였다.\n\n브라우저는 HTML 문서가 DOCTYPE을 가지고 있지 않으면 호환 모드로 렌더링을 하고, 가지고 있다면 주어진 DOCTYPE에 맞게 표준 모드로 렌더링을 한다. 호환 모드로 렌더링을 하게 되면 오래된 웹페이지들을 최신 버전의 브라우저에서도 깨지지 않게 하기 때문에 각 브라우저마다 다르게 보일 수 있다. 예를 들어, IE의 경우 호환 모드에서 박스 모델(Box model)을 잘못 해석하지만, 나머지 브라우저들은 그렇지 않다.\n\n결론적으로, 정말 특별한 경우가 아니라면 DOCTYPE을 명시하여 브라우저가 표준 모드로 렌더링 하게 하자. 현재 시점에서 HTML5에서 권장하는 방식인 <!DOCTYPE html> 을 사용하는 것이 가장 바람직하다.","keywordArray":["과거","익스플로러 버전","웹 표준","C","웹 표준","브라우저","웹 사이트","렌더링","Quirks mode","렌더링","옵션","HTML 문서","DOCTYPE","호환 모드","렌더링","DOCTYPE","표준 모드","렌더링","호환 모드","렌더링","웹 페이지들","최신 버전","브라우저","예","IE","경우 호환 모드","Box model","결론","경우","DOCTYPE","브라우저","표준 모드","시점","HTML","DOCTYPE html"]},{"id":7,"category":"HTML","title":"표준모두와호황토느","originalText":"과거의 웹 페이지는 넷스케이프와 익스플로러 버전이 따로 존재했고 웹 표준이 없었다. 그러나 W3C가 웹 표준을 만들면서 브라우저가 웹사이트를 제대로 표현할 수 없게 되자 렌더링을 할 때 표준 모드(Standards mode)와 호환 모드(Quirks mode)로 렌더링을 할 수 있게 옵션을 제공하였다.\n\n브라우저는 HTML 문서가 DOCTYPE을 가지고 있지 않으면 호환 모드로 렌더링을 하고, 가지고 있다면 주어진 DOCTYPE에 맞게 표준 모드로 렌더링을 한다. 호환 모드로 렌더링을 하게 되면 오래된 웹페이지들을 최신 버전의 브라우저에서도 깨지지 않게 하기 때문에 각 브라우저마다 다르게 보일 수 있다. 예를 들어, IE의 경우 호환 모드에서 박스 모델(Box model)을 잘못 해석하지만, 나머지 브라우저들은 그렇지 않다.\n\n결론적으로, 정말 특별한 경우가 아니라면 DOCTYPE을 명시하여 브라우저가 표준 모드로 렌더링 하게 하자. 현재 시점에서 HTML5에서 권장하는 방식인 <!DOCTYPE html> 을 사용하는 것이 가장 바람직하다.","keywordArray":["과거","익스플로러 버전","웹 표준","C","웹 표준","브라우저","웹 사이트","렌더링","Quirks mode","렌더링","옵션","HTML 문서","DOCTYPE","호환 모드","렌더링","DOCTYPE","표준 모드","렌더링","호환 모드","렌더링","웹 페이지들","최신 버전","브라우저","예","IE","경우 호환 모드","Box model","결론","경우","DOCTYPE","브라우저","표준 모드","시점","HTML","DOCTYPE html"]},{"id":8,"category":"HTML","title":"표준모두와호황토느","originalText":"과거의 웹 페이지는 넷스케이프와 익스플로러 버전이 따로 존재했고 웹 표준이 없었다. 그러나 W3C가 웹 표준을 만들면서 브라우저가 웹사이트를 제대로 표현할 수 없게 되자 렌더링을 할 때 표준 모드(Standards mode)와 호환 모드(Quirks mode)로 렌더링을 할 수 있게 옵션을 제공하였다.\n\n브라우저는 HTML 문서가 DOCTYPE을 가지고 있지 않으면 호환 모드로 렌더링을 하고, 가지고 있다면 주어진 DOCTYPE에 맞게 표준 모드로 렌더링을 한다. 호환 모드로 렌더링을 하게 되면 오래된 웹페이지들을 최신 버전의 브라우저에서도 깨지지 않게 하기 때문에 각 브라우저마다 다르게 보일 수 있다. 예를 들어, IE의 경우 호환 모드에서 박스 모델(Box model)을 잘못 해석하지만, 나머지 브라우저들은 그렇지 않다.\n\n결론적으로, 정말 특별한 경우가 아니라면 DOCTYPE을 명시하여 브라우저가 표준 모드로 렌더링 하게 하자. 현재 시점에서 HTML5에서 권장하는 방식인 <!DOCTYPE html> 을 사용하는 것이 가장 바람직하다.","keywordArray":["과거","익스플로러 버전","웹 표준","C","웹 표준","브라우저","웹 사이트","렌더링","Quirks mode","렌더링","옵션","HTML 문서","DOCTYPE","호환 모드","렌더링","DOCTYPE","표준 모드","렌더링","호환 모드","렌더링","웹 페이지들","최신 버전","브라우저","예","IE","경우 호환 모드","Box model","결론","경우","DOCTYPE","브라우저","표준 모드","시점","HTML","DOCTYPE html"]}]